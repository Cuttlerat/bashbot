#!/bin/bash

#---------------------------------------------------------------------------
#
#    DESCRIPTION: Telegram weather bot
#         AUTHOR: Kioller Alexey
#         E-MAIL: avkioller@gmail.com
#           DATE: 07.07.2017
#
#---------------------------------------------------------------------------

#==========CONSTANTS========================================================

    readonly          KEY="$1"
    readonly  WEATHER_KEY="$2"        # https://www.worldweatheronline.com/
    readonly    LOCATIONS="/data/.locations"
    readonly      TIMEOUT="10"
    readonly          URL="https://api.telegram.org/bot${KEY}"
    readonly      BOTNAME="@$( curl -s "${URL}/getMe" |           \
                               jq .result.username    | tr -d '"' )"

#==========FUNCTIONS========================================================

function _send_text {

    curl -s "${URL}/sendMessage"                                              \
            --max-time "${TIMEOUT}"                                           \
            --output /dev/null                                                \
            --data-urlencode "text=${TEXT}"                                   \
                      --data "chat_id=${CHAT_ID}"                             \
                      --data "disable_web_page_preview=${GPREVIEW}"                     
}

function _weather_request {

    curl -s "https://api.worldweatheronline.com/premium/v1/weather.ashx"      \
                  --data-urlencode "q=${ARGS:="Ленинград"}"                   \
                            --data "key=${WEATHER_KEY}"                       \
                            --data "format=json"                              \
                            --data "date=today"                               \
                            --data "fx24=yes"                                 \
                            --data "lang=ru"                                
}

function _ibash {

               TEXT="$( curl -s http://ibash.org.ru/random.php               |\
                        w3m -dump -cols 300 -T 'text/html'                   |\
                        awk '/#[0-9]+/{f=1}/━+/{f=0}f'                       |\
                        sed '1s/ +.*//'                                      )"
               _send_text 1>&2
}

function _loglist {

               TEXT="$( curl -sL https://loglist.net/api/quote/random        |\
                        jq -r .id,.content                                   |\
                        sed '1s/^/#/' )"                              
               _send_text 1>&2
}

function _qcycle {

               QCOUNT="$( sed 's/.*[^0-9].*/1/' <<< "${ARGS}" )"
               [[ ${QCOUNT:=1} -ge 5 ]] && QCOUNT=5
               for ((i=0;i<QCOUNT;i++)); do
                   _"$1"
               done
               _log_echo "$1 ${QCOUNT} by @${SENDER}"
}

function _log_echo {

               date +"[%H:%M]: $1" 1>&2
}

#===========================================================================


_log_echo "Started"

while sleep 1; do

    RAW_MESSAGE=$( curl -s "${URL}/getUpdates" )
      MSG_COUNT=$( jq '.result | length' <<< "${RAW_MESSAGE}" )

    for i in $( seq 0 "${MSG_COUNT}" ); do

     MESSAGE_ID=$( jq .result[$i].message.message_id           <<< "${RAW_MESSAGE}" )
      UPDATE_ID=$( jq .result[$i].update_id                    <<< "${RAW_MESSAGE}" )
        CHAT_ID=$( jq .result[$i].message.chat.id              <<< "${RAW_MESSAGE}" )
        MESSAGE=$( jq  -r .result[$i].message.text             <<< "${RAW_MESSAGE}" | sed -r "s/${BOTNAME}//" )
        MESSAGE=$( sed -r 's/^ч(е|ё|то) (такое|за)/\/google/'  <<< "${MESSAGE}"     )
           ARGS=$( awk '{$1="";print $0}'                      <<< "${MESSAGE}"     | xargs 2>/dev/null )
        MESSAGE=$( awk '{print $1}'                            <<< "${MESSAGE}"     )
         SENDER=$( jq  -r .result[$i].message.from.username    <<< "${RAW_MESSAGE}" )


    if [[ "${MESSAGE_ID}" -ne "${LAST_ID}" ]]; then

        case "${MESSAGE}" in

            /w|/weather)

                RAW_WEATHER=$( _weather_request )
                       TEMP=$( jq -r .data.current_condition[0].temp_C           <<< "${RAW_WEATHER}" | sed '/^[0-9]/s/^/+/' )
                    COMMENT=$( jq -r .data.current_condition[0].lang_ru[0].value <<< "${RAW_WEATHER}" )
                       CITY=$( jq -r .data.request[0].query                      <<< "${RAW_WEATHER}" )
                UPDATE_TIME=$( jq -r .data.current_condition[0].observation_time <<< "${RAW_WEATHER}" |\
                               xargs -i date -d 'TZ="UTC" {}' +"%H:%M" 2>/dev/null )
                [[ -z ${ARGS} ]] && grep -q "${SENDER}" "${LOCATIONS}" && CITY=$( sed -n "s/${SENDER};//p" "${LOCATIONS}" )

                if [[ "${CITY}" == "null" ]] || [[ "${CITY}" == "" ]]
                then
                    TEXT="Wrong location!"
                else
                    TEXT=$( echo -e "[${UPDATE_TIME}]: ${TEMP} ${COMMENT}\n${CITY}" )
                fi

                _send_text
                _log_echo "Weather \"${CITY}\" to @${SENDER}"                               
                ;;

           /info)

                TEXT=$( sed 's/^\s\+//' <<<\
                     "This is my first bot on Bash.
                      You can see the code here https://github.com/Cuttlerat/bashbot
                      by @Cuttlerat" )
                _send_text
                ;;

           /start)

                TEXT=$( sed 's/^\s\+//' <<<\
                     'Enter "/weather (or /w) City" to see what temprature is there for now

                      Example: /w London' )
                _send_text
                ;;

           /ibash)

                _qcycle "ibash"
                ;;

           /loglist)

                _qcycle "loglist"
                ;;

           /restart|/reboot)

                if [[ ! -z $LAST_ID ]]; then
                    TEXT="Rebooting..."
                    _send_text
                    _log_echo "Reboot by @{$SENDER}"
                    exit
                fi
                ;;

           /wset)
                
                if [[ -z ${ARGS} ]] || [[ ${ARGS} =~ [Ee]mpty ]]; then
                    if grep -q "${SENDER}" "${LOCATIONS}"; then 
                        sed -i "/${SENDER}/d" "${LOCATIONS}"
                        TEXT="Deleted information about @${SENDER}"
                    else
                        TEXT="No information about @${SENDER}"
                    fi
                elif grep -q "${SENDER}" "${LOCATIONS}"; then
                    sed -i "s/${SENDER};.*/$SENDER;${ARGS}/" "${LOCATIONS}"
                    TEXT="New city for @${SENDER}: ${ARGS}"
                else 
                    echo "${SENDER};${ARGS}" >> "${LOCATIONS}"
                    TEXT="Added @${SENDER}: ${ARGS}"
                fi
                _send_text
                _log_echo "$TEXT"
                ;;

            /md5)

                TEXT=$( md5sum <<< "${ARGS}" | awk '{print $1}' )
                _send_text
                _log_echo "MD5 to @${SENDER}"
                ;;

           /google)

               ARGS=${ARGS//\?/}
               GPREVIEW=0
               TEXT="https://www.google.ru/search?q=${ARGS// /+}"
               _send_text
               _log_echo "Google: \"${ARGS}\" by @${SENDER}"
               GPREVIEW=1
               ;;

           /*@*)
               TEXT="НЕ ЮЗАЙ ЕГО! ЮЗАЙ МЕНЯ!"
               _send_text
               _log_echo "Another bot command: \"${MESSAGE} ${ARGS}\" by @${SENDER}"
               ;;

           /*)
               TEXT="НЕТ У МЕНЯ ТАКИХ КОМАНД БЛЯТЬ!"
               _send_text
               _log_echo "Unknown command: \"${MESSAGE}${ARGS:+" ${ARGS}"}\" by @${SENDER}"
               ;;
 
        esac

        LAST_ID="${MESSAGE_ID}"
        curl -s "${URL}/getUpdates" --data "offset=$((UPDATE_ID + 1))" -o /dev/null
    fi
   done
done
